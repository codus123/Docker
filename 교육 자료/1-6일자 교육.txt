run = (pull) + create + start
docker run -d --name hd -p 88:80 httpd
docker run -d(백그라운드) --name 컨테이너이름 -p 호스트포트:컨테이너포트 이미지이름

여러 컨테이너 동시 실행
docker run -d -p 8080:80 --name apa1 httpd
docker run -d -p 8081:80 --name apa2 httpd
docker run -d -p 8082:80 --name apa3 httpd

docker stop `docker ps -aq`
docker rm `docker ps -aq`
docker rmi `docker images -q`

확인 명령어
docker ps		동작 중인 컨테이너
docker ps -a	모든 컨테이너 
docker images	이미지

데이터베이스
1. Oracle
2. MS-SQL
3. MySQL = MariaDB

이미지 검색
1. 브라우저(hub.docker.com)
2. docker search 이미지이름

docker rm -f = docker stop + rm

--rm 옵션: 컨테이너 스톱시 컨테이너 자동 삭제(이미지 잔존)
docker run -d -p 8080:8080 --name tc --rm tomcat

-e: 환경변수 지정
docker run -d -e MYSQL_ROOT_PASSWORD=password --name ms mysql

동작 중인 컨테이너에 들어갈 때
docker exec -it 컨테이너이름 bash

docker exec -it ms bash
bash-4.4> mysql -u root -p
show databases;
exit

docker image rm 이미지명 = docker rmi 이미지명

이미지 한꺼번에 삭제
docker image rm 이미지1 이미지2 이미지3
docker rmi `docker images -q` = docker rmi $(docker images -q)

docker image ls = docker images

Wordpress = wordpress + apache + mysql + php
컨테이너: WordPress + MySQL + (도커네트워크)

도커 네트워크 확인
docker network ls
도커 네트워크 생성
docker network create 네트워크이름
도커 네트워크 삭제
docker network rm 네트워크이름

[2개 컨테이너 연동] 
WordPress + MySQL
1) 네트워크
   docker create network wpnet
   네트워크 	wpnet
2) MYSQL 컨테이너 생성
    docker run -d --name ms --net=wpnet -e MYSQL_ROOT_PASSWORD=rootpass -e MYSQL_DATABASE=wpdb -e MYSQL_USER=wpuser -e MYSQL_PASSWORD=wppass mysql
    docker run -d --name ms --net=wpnet \
    -e MYSQL_ROOT_PASSWORD=rootpass \
    -e MYSQL_DATABASE=wpdb \
    -e MYSQL_USER=wpuser \
    -e MYSQL_PASSWORD=wppass mysql
   이름		ms
   루트패스워드	MYSQL_ROOT_PASSWORD=rootpass
   데이터베이스이름 	MYSQL_DATABASE=wpdb
   DB 사용자 이름	MYSQL_USER=wpuser
   DB 패스워드	MYSQL_PASSWORD=wppass
3) 워드프레스 컨테이너 생성
   docker run -d --name wp --net=wpnet -p 8080:80 -e WORDPRESS_DB_HOST=ms -e WORDPRESS_DB_NAME=wpdb -e WORDPRESS_DB_USER=wpuser -e WORDPRESS_DB_PASSWORD=wppass 
   docker run -d --name wp --net=wpnet \
   -p 8080:80 -e WORDPRESS_DB_HOST=ms \
   -e WORDPRESS_DB_NAME=wpdb \
   -e WORDPRESS_DB_USER=wpuser \
   -e WORDPRESS_DB_PASSWORD=wppass wordpress

[2개 컨테이너 연동-2]
레드마인 & MariaDB 연동

1) 네트워크 생성
   docker network create rednet
2) MariaDB
docker run -d --name=ms --net=rednet \
-e MARIADB_ROOT_PASSWORD=rootpass \
-e MARIADB_DATABASE=reddb \
-e MARIADB_USER=reduser \
-e MARIADB_PASSWORD=redpass \
mariadb

   루트패스워드	MARIADB_ROOT_PASSWORD=rootpass
   데이터베이스이름 	MARIADB_DATABASE=reddb
   DB 사용자 이름	MARIADB_USER=reduser
   DB 패스워드	MARIADB_PASSWORD=redpass
3) RedMine
docker run -d -p 8888:3000 --name red --net=rednet \
-e REDMINE_DB_MARIADB=ms \
-e REDMINE_DB_DATABASE=reddb \
-e REDMINE_DB_USERNAME=reduser \
-e REDMINE_DB_PASSWORD=redpass \
redmine

   DB 컨테이너이름	REDMINE_DB_MYSQL=ms
   데이터베이스이름 	REDMINE_DB_DATABASE=reddb
   DB 사용자 이름	REDMINE_DB_USERNAME=reduser
   DB 패스워드	REDMINE_DB_PASSWORD=redpass






















































